{"identifier":{"url":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemoryStorage","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This storage can be used when data should be cleared between cold launches of an appliction"},{"type":"text","text":" "},{"text":"automatically. Use with caution when storing big values, since the entire content of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage is kept in memory."}]},{"anchor":"Threading-considerations","text":"Threading considerations","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"code":"MemoryStorage","type":"codeVoice"},{"type":"text","text":" is Sendable since it is an actor and therefore safe to be used from any"},{"type":"text","text":" "},{"text":"concurrent context.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/foundationextras\/memorystorage"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FoundationExtras\/documentation\/FoundationExtras"]]},"topicSections":[{"identifiers":["doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/init(initialValue:)"],"title":"Initializers"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/Actor-Implementations","doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/Storage-Implementations"]}],"metadata":{"title":"MemoryStorage","navigatorTitle":[{"kind":"identifier","text":"MemoryStorage"}],"modules":[{"name":"FoundationExtras"}],"externalID":"s:16FoundationExtras13MemoryStorageC","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MemoryStorage","kind":"identifier"}],"roleHeading":"Class","role":"symbol","symbolKind":"class"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"text":"A Storage implementation that holds its entire content in memory.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/Storage","doc:\/\/FoundationExtras\/s8SendableP","doc:\/\/FoundationExtras\/ScA","doc:\/\/FoundationExtras\/12_Concurrency8AnyActorP"],"type":"conformsTo"}],"references":{"doc://FoundationExtras/documentation/FoundationExtras/Storage":{"identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/Storage","kind":"symbol","title":"Storage","navigatorTitle":[{"kind":"identifier","text":"Storage"}],"abstract":[{"type":"text","text":"A Protocol that defines persistence capabilities."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Storage"}],"url":"\/documentation\/foundationextras\/storage","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://FoundationExtras/documentation/FoundationExtras":{"role":"collection","title":"FoundationExtras","abstract":[{"type":"text","text":"Useful extensions to the Foundation framework."}],"type":"topic","url":"\/documentation\/foundationextras","kind":"symbol","identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras"},"doc://FoundationExtras/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FoundationExtras\/s8SendableP"},"doc://FoundationExtras/documentation/FoundationExtras/MemoryStorage/Storage-Implementations":{"kind":"article","role":"collectionGroup","title":"Storage Implementations","abstract":[],"identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/Storage-Implementations","type":"topic","url":"\/documentation\/foundationextras\/memorystorage\/storage-implementations"},"doc://FoundationExtras/documentation/FoundationExtras/MemoryStorage":{"kind":"symbol","role":"symbol","title":"MemoryStorage","abstract":[{"text":"A Storage implementation that holds its entire content in memory.","type":"text"}],"identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryStorage"}],"navigatorTitle":[{"text":"MemoryStorage","kind":"identifier"}],"type":"topic","url":"\/documentation\/foundationextras\/memorystorage"},"doc://FoundationExtras/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/FoundationExtras\/ScA"},"doc://FoundationExtras/documentation/FoundationExtras/MemoryStorage/Actor-Implementations":{"url":"\/documentation\/foundationextras\/memorystorage\/actor-implementations","kind":"article","title":"Actor Implementations","abstract":[],"identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/Actor-Implementations","role":"collectionGroup","type":"topic"},"doc://FoundationExtras/documentation/FoundationExtras/MemoryStorage/init(initialValue:)":{"identifier":"doc:\/\/FoundationExtras\/documentation\/FoundationExtras\/MemoryStorage\/init(initialValue:)","kind":"symbol","title":"init(initialValue:)","abstract":[{"text":"Creates a MemoryStorage.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"url":"\/documentation\/foundationextras\/memorystorage\/init(initialvalue:)","role":"symbol","type":"topic"},"doc://FoundationExtras/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","type":"unresolvable","identifier":"doc:\/\/FoundationExtras\/12_Concurrency8AnyActorP"}}}